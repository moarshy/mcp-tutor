[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-educational-tutor"
version = "0.1.0"
description = "MCP Educational Tutoring System with document-level preparation and AI agent capabilities"
authors = [
    {name = "Arshath", email = "marshath@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core MCP dependencies
    "mcp>=1.0.0",
    
    # Data validation and models
    "pydantic>=2.0.0",
    
    # AI/ML libraries for tutoring agent
    "dspy-ai>=2.4.0",
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
mcp-tutor-server = "mcp_server.main:main"
mcp-tutor-client = "mcp_client.main:main"
mcp-tutor-agent = "tutor_agent.main:main"

# Configure each module as a separate package
[tool.hatch.build.targets.wheel]
packages = ["mcp_server", "mcp_client", "tutor_agent"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
type-check = "mypy mcp_server mcp_client tutor_agent"
format = "black mcp_server mcp_client tutor_agent"
lint = "ruff check mcp_server mcp_client tutor_agent"

# Black configuration
[tool.black]
target-version = ["py311"]
line-length = 100
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
